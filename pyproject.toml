[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stock-analyzer"
version = "0.1.0"
description = "Hong Kong Stock Pattern Recognition System"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Stock Analyzer Team"}
]
keywords = ["stock", "trading", "pattern", "recognition", "hong-kong"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    # Core data fetching dependencies
    "yfinance>=0.2.18",
    "pandas>=1.5.0",

    # Technical analysis and feature extraction
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",

    # Machine learning and model training
    "xgboost>=1.7.0",
    "joblib>=1.2.0",
    "imbalanced-learn>=0.10.0",

    # Progress bars and UI enhancements
    "tqdm>=4.64.0",

    # Visualization for data validation
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "mplfinance>=0.12.10b0",

    # CLI interface
    "typer>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
notebook = [
    "jupyter>=1.0.0",
    "notebook>=6.4.0",
    "ipykernel>=6.0.0",
    "nbstripout>=0.6.1",
    "papermill>=2.4.0",
    "jupytext>=1.14.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "black>=22.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "nbqa>=1.7.0",
    "nbstripout>=0.6.1",
    "jupytext>=1.14.0",
]
talib = [
    "TA-Lib>=0.4.24",
]
all = [
    "stock-analyzer[notebook,dev,talib]"
]

[project.urls]
Homepage = "https://github.com/your-org/stock-analyzer"
Documentation = "https://github.com/your-org/stock-analyzer/blob/main/README.md"
Repository = "https://github.com/your-org/stock-analyzer.git"
Issues = "https://github.com/your-org/stock-analyzer/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["stock_analyzer*"]
exclude = ["tests*", "notebooks*", "examples*"]

[project.scripts]
stock-analyzer = "stock_analyzer.cli:app"

[tool.setuptools.package-data]
"stock_analyzer" = ["*.json", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=stock_analyzer --cov-report=html --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "build",
    "dist",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "mplfinance.*",
    "scipy.*",
    "sklearn.*",
    "xgboost.*",
    "imblearn.*",
]
ignore_missing_imports = true

[tool.nbqa.addopts]
ruff = ["--extend-ignore=E501"]
